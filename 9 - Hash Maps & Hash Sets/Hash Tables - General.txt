Difference between Hash Map, Hash Set and Hash Table
(Link: https://www.w3schools.blog/hashset-hashmap-hashtable-java)

1) Hash Map
 - HashMap class in java, implements the map interface by using a HashTable.
It inherits AbstractMap class and implements the Map interface. It represents
a group of objects and every object will be in key-value pair form. It 
maintains no order for its elements. Duplicate key is not allowed. It can
have only one null as key and multiple null as values.
Eg: HashMap<Integer,String> angularDevepolers = new HashMap<Integer,String>();
    angularDevepolers.put(1, "Navdeep");


2) Hash Set
 - HashSet inherits AbstractSet class and implements Set interface. Set 
objects are always unique and no duplicate objects are allowed. One null
key value is allowed. The hashing mechanism is used to insert the objects
into a HashSet.
 - Very USeful for getting Unique elements of array, etc.
 - Does not have a get method, as it use set interface.
Eg: HashSet angularDevepolers = new HashSet();
    angularDevepolers.add("Navdeep");

3) Hash Table
 - Hashtable inherits Dictionary class and implements Map interface. 
Hashtable contains elements/objects/items in key-value pair and does not
allow any duplicate key. It is Thread-Safe because of its synchronized 
nature. The null is not allowed for both key and value. The hashcode() 
method is used to find the position of the elements.
 - typically, a hash set is used to check if a value has ever appeared or not.
Eg: Hashtable<Integer,String> angularDevepolers = new Hashtable<Integer,String>();
    angularDevepolers.put(1, "Navdeep");

Time Complexity:
1) Insertion: O(1)
2) Searching: O(1), worst case, the maximum bucket size will be N, therefore O(n)
Using Height Balanced BST: Worst Case Insertion & Search: O(log n)



Common Questions regarding Hash Tables
1) What is the principle of a hash table?
 - The key idea of Hash Table is to use a hash function to map keys to 
buckets, using a given hash function.
2) How to design a hash table?
3) How to use hash set to solve duplicates related problems?
4) How to use hash map to aggregate information by key?
5) How to design a proper key when using a hash table?